#!/bin/bash
set -eo pipefail

#1 id
#2 default bg
#3 default fg
#4 warn capacity
#5 warn bg
#6 warn fg
#7 critical capacity
#8 critical bg
#9 critical fg

#TODO: should be rewritten with clear states and priorities

barId="$1"
defaultBg="$2"
defaultFg="$3"
function default {
	swaymsg bar "$barId" colors background "$defaultBg"
	swaymsg bar "$barId" colors statusline "$defaultFg"
}

pendingclear=0
while true; do
	while [[ "$(cat "$XDG_RUNTIME_DIR/wl-present-isfrozen")" == 1 ]]; do
		delay=0.5
		swaymsg bar "$1" colors background 7fb06d
		swaymsg bar "$1" colors statusline ffffff
		sleep "$delay"
		default
		sleep "$delay"
	done

	notified=0
	while [[ "$(cat /sys/class/power_supply/AC/online)" == 0 && "$(cat /sys/class/power_supply/BAT0/capacity)" -le "$4" ]]; do
		warn_bg="$5" warn_fg="$6" delay=2
		if [[ "$(cat /sys/class/power_supply/BAT0/capacity)" -le "$7" ]]; then
			warn_bg="$8" warn_fg="$9" delay=0.5
			if [[ "$notified" == 0 ]]; then
				notify-send -t 5000 'Battery critical' "$(cat /sys/class/power_supply/BAT0/capacity)%"  # -u critical (doesn't respect -t)
				notified=1
			fi
		else
			notified=0
		fi
		swaymsg bar "$1" colors background "$warn_bg"
		swaymsg bar "$1" colors statusline "$warn_fg"
		sleep "$delay"
		default	
		sleep "$delay"
	done

	if [[ "$(bluetoothctl info | grep 'Battery Percentage' | cut -d'(' -f2 | cut -d')' -f1 || echo 100)" -le 20 ]]; then
		warn_bg="$5" warn_fg="$6"
		swaymsg bar "$1" colors background 0064c2
                swaymsg bar "$1" colors statusline "$warn_fg"
		sleep "0.2"
		swaymsg bar "$1" colors background "$warn_bg"
                swaymsg bar "$1" colors statusline "$warn_fg"
		sleep "0.6"
		default
	fi


#	if [[ "$(cat "$XDG_RUNTIME_DIR/poll-timetagger")" == "" ]]; then
#		swaymsg bar "$1" colors background 0f3d57
#		swaymsg bar "$1" colors statusline ffffff
#		pendingclear=1
#	else
#		if [[ "$pendingclear" == 1 ]]; then
#			default
#			pendingclear=0
#		fi
#	fi
sleep 5
done

