#!/bin/bash
set -uo pipefail

# expected to be executed every $1 seconds
while true; do
out=""
	#out+="‚è≤Ô∏è$(cat "$XDG_RUNTIME_DIR/poll-timetagger")	"

	outcache=""
	dev="$(wpctl inspect @DEFAULT_AUDIO_SOURCE@ | grep ' node.description =' | cut -d\" -f2)"
	case "$dev" in
		"Built-in Audio Analog Stereo"|"Family 17h/19h HD Audio Controller Digital Microphone")
			;;
		"Webcam C310 Mono")
			outcache="C310"
			;;
		"ThinkPad Dock USB Audio Analog Stereo"|"ThinkPad USB-C Dock Gen2 USB Audio Mono")
			outcache="Dock"
			;;
		"Jabra SPEAK 410 Mono")
			outcache="Jabra"
			;;
		*)
			outcache="$dev"
			;;
	esac
	if [[ "$("$(dirname "$0")/wpctl-status" @DEFAULT_AUDIO_SOURCE@)" == 0 ]]; then
		if [[ "$outcache" = "" ]]; then
			out+="üé§‚ùå "
		else
			out+="üé§‚ùå$outcache "
		fi
	else
		if [[ "$outcache" != "" ]]; then
			out+="üé§$outcache "
		fi
	fi

	status="$(bluetoothctl show | grep Powered | sed 's/[[:space:]]*Powered: //g')"
	if [[ "$status" == "yes" ]]; then
		if bluetoothctl devices Connected | grep -q Device; then
			out+="üîπ"
		else
			out+="ü´ß"
		fi
	fi

	outcache=""
	dev="$(wpctl inspect @DEFAULT_AUDIO_SINK@ | grep ' node.description =' | cut -d\" -f2)"
	case "$dev" in
		"Built-in Audio Analog Stereo"|"Family 17h/19h HD Audio Controller Speaker + Headphones")
			;;
		"ThinkPad Dock USB Audio Analog Stereo"|"ThinkPad USB-C Dock Gen2 USB Audio Analog Stereo")
			outcache+="Dock"
			;;
		"Jabra SPEAK 410 Analog Stereo")
			outcache+="Jabra"
			;;
		"(4D)Logitech Adapter")
			outcache="!! BT"
			;;
		*)
			outcache+="$dev"
			;;
	esac

	if [[ "$("$(dirname "$0")/wpctl-status" @DEFAULT_AUDIO_SINK@)" == 0 ]]; then
		out+="üîá"
	else
		out+="üîâ"
		if [[ "$outcache" == "" ]]; then
			out+="‚ö†Ô∏è "
		fi
	fi
	if [[ "$outcache" != "" ]]; then
		out+="$outcache "
	fi

	out+="	"

	case "$(swaymsg -t get_inputs | jq -r 'map(select(has("xkb_active_layout_name")))[0].xkb_active_layout_name')" in
		"Estonian (no dead keys)")
			;;
		"Russian (Sweden, phonetic)")
			out+="[ru]	"
			;;
		"English (US)")
			out+="[en]	"
			;;
		*)
			out+="[?kbd?]	"
			;;
	esac
	

	if [[ "$(cat /sys/class/power_supply/AC/online)" == 1 ]]; then
		out+='üîå'
	fi
	out+="$(cat /sys/class/power_supply/BAT0/capacity)%"
	
	if [[ "$(nmcli radio wifi)" != "enabled" ]]; then
		out+=" ‚öìÔ∏è"
	elif [[ "$(nmcli -f type connection show --active | awk '$1 == "wifi"')" == "" ]]; then
		out+=" üåä"
	fi

	out+=" $(date +'%Y-%m-%d %H:%M:%S')"

echo "$out"
sleep "$1"
done
