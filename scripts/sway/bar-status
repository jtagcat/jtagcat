#!/bin/bash
set -uo pipefail

# expected to be executed every $1 seconds
while true; do
out=""
	#out+="‚è≤Ô∏è$(cat "$XDG_RUNTIME_DIR/poll-timetagger")	"

	outcache=""
	dev="$(wpctl inspect @DEFAULT_AUDIO_SOURCE@ | grep ' node.description =' | cut -d\" -f2)"
	case "$dev" in
		"Built-in Audio Analog Stereo"|"Family 17h/19h HD Audio Controller Digital Microphone")
			;;
		"Webcam C310 Mono")
			outcache="C310"
			;;
		"ThinkPad Dock USB Audio Analog Stereo"|"ThinkPad USB-C Dock Gen2 USB Audio Mono")
			outcache="Dock"
			;;
		"Jabra SPEAK 410 Mono")
			outcache="Jabra"
			;;
		*)
			outcache="$dev"
			;;
	esac
	if [[ "$("$(dirname "$0")/wpctl-status" @DEFAULT_AUDIO_SOURCE@)" == 0 ]]; then
		if [[ "$outcache" = "" ]]; then
			out+="üé§‚ùå "
		else
			out+="üé§‚ùå$outcache "
		fi
	else
		if [[ "$outcache" != "" ]]; then
			out+="üé§$outcache "
		fi
	fi

	btbat=""
	status="$(bluetoothctl show | grep Powered | sed 's/[[:space:]]*Powered: //g')"
	if [[ "$status" == "yes" ]]; then
		if (bluetoothctl devices Connected ||:) | grep -q Device; then
			out+="üîπ"

			btper="$(bluetoothctl info | grep 'Battery Percentage' || true)"
			if [[ "$btper" != "" && "$(cut -d'(' -f2 <<< "$btper" | cut -d')' -f1)" -le 50 ]]; then
				btbat="ü™´"
			fi
		else
			out+="ü´ß"
		fi
	fi

	outcache=""
	dev="$(wpctl inspect @DEFAULT_AUDIO_SINK@ | grep ' node.description =' | cut -d\" -f2)"
	case "$dev" in
		"Built-in Audio Analog Stereo"|"Family 17h/19h HD Audio Controller Speaker + Headphones")
			;;
		"Built-in Audio Digital Stereo (HDMI)")
			outcache+="HDMI"
			;;
		"ThinkPad Dock USB Audio Analog Stereo"|"ThinkPad USB-C Dock Gen2 USB Audio Analog Stereo")
			outcache+="Dock"
			;;
		"Jabra SPEAK 410 Analog Stereo")
			outcache+="Jabra"
			;;
		"(4D)Logitech Adapter")
			outcache="!! BT"
			;;
		"WI-C100")
			(bluetoothctl devices Connected ||:) | grep -q 'blu WI-C100' && \
				outcache+="blu "

			outcache+="WI-C100"
			;;
		*)
			outcache+="$dev"
			;;
	esac

	if [[ "$("$(dirname "$0")/wpctl-status" @DEFAULT_AUDIO_SINK@)" == 0 ]]; then
		out+="üîá"
	else
		out+="üîâ"
		if [[ "$outcache" == "" ]]; then
			out+="‚ö†Ô∏è "
		fi
	fi
	if [[ "$outcache" != "" ]]; then
		out+="${outcache}${btbat} "
	fi

	out+="	"

	case "$(swaymsg -t get_inputs | jq -r 'map(select(has("xkb_active_layout_name")))[0].xkb_active_layout_name')" in
		"Estonian (no dead keys)")
			;;
		"Russian (Sweden, phonetic)")
			out+="[ru]	"
			;;
		"English (US)")
			out+="[en]	"
			;;
		*)
			out+="[?kbd?]	"
			;;
	esac
	
	if [[ -d /sys/class/power_supply/AC ]]; then
		if [[ "$(cat /sys/class/power_supply/AC/online)" == 1 ]]; then
			out+='üîå'
		fi
		out+="$(cat /sys/class/power_supply/BAT0/capacity)%"
	fi

	if [[ -d /sys/class/power_supply/hidpp_battery_0 ]]; then
		case "$(cat /sys/class/power_supply/hidpp_battery_0/capacity_level)" in
			Critical|Low)
				out+=" üñ∞ü™´"
				;;
		esac
	fi


	eth="$(nmcli device | awk '$2 == "ethernet" { print $3 == "connected" }' | tr '\n' '+' | sed 's/+$/\n/' | bc)"
	wifi="$(nmcli device | awk '$2 == "wifi" { print $3 == "connected" }' | tr '\n' '+' | sed 's/+$/\n/' | bc)"
	wifinot="$(nmcli device | awk '$2 == "wifi" { print $3 == "disconnected" }' | tr '\n' '+' | sed 's/+$/\n/' | bc)"

	case "$(nmcli networking connectivity)" in
		full)
			if [[ "$eth" -gt 0  && "$wifi" -gt 0 ]]; then
				out+=" ‚öìÔ∏èüõú"
			fi
			;;

		limited|none)
			[[ "$wifinot" -gt 0 ]] && out+=" üåä" || out+=" ‚öìÔ∏è"
			;;&
		limited)
			out+="‚ó†‚èö"
			;;
	esac


	out+=" $(date +'%a:%Y-%m-%d %H:%M:%S')"
#	out+=" üõ∞$(TZ=Asia/Seoul date +'%H:%M:%S')"

	if [[ -f "$XDG_RUNTIME_DIR/cafinhibit" ]]; then
		out+=" üü©"
	fi

echo "$out"
sleep "$1"
done
